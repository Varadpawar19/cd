6. Implementing a Desk Calculator using LEX and YACC

calculator.l

%{
#include "y.tab.h"     // Include YACC-generated header
#include <stdlib.h>    // For atoi()
%}

%%

[0-9]+                 { yylval = atoi(yytext); return NUMBER; }
[+\-*/()]              { return yytext[0]; }  // Return character tokens directly
[ \t]                  ;                     // Ignore whitespace
.                      { printf("Invalid character: %s\n", yytext); }

%%

int yywrap() {
    return 1;
}

-------------------------------------------------------------------------------------------------------------

calculator.y

%{
#include <stdio.h>
#include <stdlib.h>
int yylex(); // Declaration of the lexer function
void yyerror(const char *msg); // Error function
%}

%token NUMBER

%%

expr:
      expr '+' term     { $$ = $1 + $3; }
    | expr '-' term     { $$ = $1 - $3; }
    | term              { $$ = $1; }
    ;

term:
      term '*' factor   { $$ = $1 * $3; }
    | term '/' factor   { 
                          if ($3 == 0) {
                            yyerror("Division by zero");
                            YYABORT;
                          }
                          $$ = $1 / $3; 
                        }
    | factor            { $$ = $1; }
    ;

factor:
      '(' expr ')'      { $$ = $2; }
    | NUMBER            { $$ = $1; }
    ;

%%

int main() {
    printf("Enter an arithmetic expression:\n");
    yyparse();
    return 0;
}

void yyerror(const char *msg) {
    fprintf(stderr, "Error: %s\n", msg);
}

-----------------------------------------------------------------------------------------------------------

Compilation and Execution:
1. Compile the YACC file:
yacc -d calculator.y
2. Compile the LEX file:
lex calculator.l
3. Compile both outputs with GCC:
gcc lex.yy.c y.tab.c -o calculator -ll -ly
4. Run the program:
./calculator
5. Enter an arithmetic expression like 5 + 3 * (8 - 2) and observe the output.
Expected Output Example:
Enter an arithmetic expression:
5 + 3 * (8 - 2)
Result: 23
